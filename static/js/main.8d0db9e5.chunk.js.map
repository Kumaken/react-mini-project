{"version":3,"sources":["api/jobs.ts","contexts/JobSearch.ts","utils/DateUtil.ts","components/JobListComponent.tsx","components/JobSearch.tsx","pages/JobList.tsx","pages/JobDescription.tsx","contexts/Login.ts","contexts/Alert.ts","pages/Login.tsx","utils/CheckIfLoggedIn.ts","route/AuthenticatedRoute.tsx","utils/Algorithm.ts","components/alert/FailedLogin.tsx","components/alert/index.tsx","components/navbar/NavbarComponent.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["GITHUB_JOB_PREFIX","CancelToken","axios","JobSearchContext","React","createContext","jobdesc","setJobdesc","key","location","setLocation","fulltime","setFulltime","bool","searchNow","setSearchNow","DateUtil","date1","date2","diff","Math","abs","getTime","ceil","JobListComponent","props","useState","queryResult","setQueryResult","useContext","useEffect","console","log","jobList","jobdesc_filtered","loc_filtered","ft_filtered","filter","job","description","toLocaleLowerCase","includes","type","filterQuery","iterateJobs","useCallback","jobElements","forEach","push","to","id","Item","className","Column","title","company","getDatesDiffInDays","Date","created_at","hoverable","JobSearch","searchFilter","setSearchFilter","size","placeholder","value","onInput","e","event","target","onChange","onClick","JobList","setJobList","cancel","request","url","method","cancelToken","c","then","response","data","fetchJobList","catch","err","Provider","JobDescription","params","useParams","jobDesc","setJobDesc","fetchJobDesc","JobHeader","dangerouslySetInnerHTML","__html","DOMPurify","sanitize","src","company_logo","company_url","how_to_apply","JobContent","LoginContext","isLoggedIn","setIsLoggedIn","username","setUsername","imageUrl","setImageUrl","AlertContext","loginFailAlert","setLoginFailAlert","Login","history","useHistory","rememberMe","setRememberMe","user_cred","password","filledCreds","setFilledCreds","action","required","Cookies","set","path","replace","CheckIfLoggedIn","get","AuthenticatedRoute","Component","component","rest","render","pathname","state","from","Algorithm","min","max","floor","random","n","round","Number","EPSILON","pow","ms","Promise","resolve","setTimeout","FailedLogin","CSSTransition","in","timeout","enter","exit","classNames","unmountOnExit","onEnter","a","delay","color","remove","Alerts","NavbarComponent","navbarActive","setNavbarActive","fixed","active","transparent","Brand","toString","Burger","Menu","Container","position","dropdown","arrowless","Dropdown","App","exact","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.8d0db9e5.chunk.js","sourcesContent":["import axios from 'axios';\n\nconst GITHUB_JOB_PREFIX = 'https://jobs.github.com/positions';\nconst { CancelToken } = axios;\n\nexport const fetchJobList = () => {\n\tlet cancel;\n\treturn {\n\t\trequest: axios({\n\t\t\turl: `${GITHUB_JOB_PREFIX}.json`,\n\t\t\tmethod: 'get',\n\t\t\tcancelToken: new CancelToken((c) => {\n\t\t\t\tcancel = c;\n\t\t\t})\n\t\t}).then((response) => {\n\t\t\treturn response.data;\n\t\t}),\n\t\tcancel\n\t};\n};\n\nexport const fetchJobDesc = (id: string) => {\n\tlet cancel;\n\treturn {\n\t\trequest: axios({\n\t\t\turl: `${GITHUB_JOB_PREFIX}/${id}.json`,\n\t\t\tmethod: 'get',\n\t\t\tcancelToken: new CancelToken((c) => {\n\t\t\t\tcancel = c;\n\t\t\t})\n\t\t}).then((response) => {\n\t\t\treturn response.data;\n\t\t}),\n\t\tcancel\n\t};\n};\n","import React from 'react';\n\n// Context:\nexport const JobSearchContext = React.createContext({\n\tjobdesc: '',\n\tsetJobdesc: (key: string) => {},\n\tlocation: '',\n\tsetLocation: (key: string) => {},\n\tfulltime: false,\n\tsetFulltime: (bool: boolean) => {},\n\tsearchNow: false,\n\tsetSearchNow: (bool: boolean) => {}\n});\n","export default class DateUtil {\n\tstatic getDatesDiffInDays(date1: Date, date2: Date): number {\n\t\tvar diff = Math.abs(date1.getTime() - date2.getTime());\n\t\treturn Math.ceil(diff / (1000 * 3600 * 24));\n\t}\n}\n","import { JobSearchContext } from 'contexts/JobSearch';\nimport React, { useContext, useEffect, useState } from 'react';\nimport Box from 'react-bulma-components/lib/components/box';\nimport List from 'react-bulma-components/lib/components/list';\nimport Columns from 'react-bulma-components/lib/components/columns';\nimport { Link } from 'react-router-dom';\nimport { useCallback } from 'react';\n\nimport './JobListComponent.scss';\nimport DateUtil from 'utils/DateUtil';\n\nconst JobListComponent = (props: any) => {\n\tconst [queryResult, setQueryResult] = useState<any>();\n\tconst { jobdesc, location, fulltime, searchNow, setSearchNow } = useContext(JobSearchContext);\n\n\tuseEffect(() => {\n\t\tconsole.log('use effect called');\n\t\tsetQueryResult(props.jobList);\n\t}, [props.jobList]);\n\n\tuseEffect(() => {\n\t\tconst filterQuery = () => {\n\t\t\tlet jobdesc_filtered;\n\t\t\tif (jobdesc !== '')\n\t\t\t\tjobdesc_filtered = props.jobList.filter((job) => job.description.toLocaleLowerCase().includes(jobdesc));\n\t\t\telse jobdesc_filtered = props.jobList;\n\n\t\t\tlet loc_filtered;\n\t\t\tif (location !== '')\n\t\t\t\tloc_filtered = jobdesc_filtered.filter((job) => job.location.toLocaleLowerCase().includes(location));\n\t\t\telse loc_filtered = jobdesc_filtered;\n\n\t\t\tlet ft_filtered;\n\t\t\tconsole.log('fulltime?', fulltime);\n\t\t\tif (fulltime)\n\t\t\t\tft_filtered = loc_filtered.filter((job) => job.type.toLocaleLowerCase().includes('full time'));\n\t\t\telse ft_filtered = loc_filtered;\n\n\t\t\tconsole.log('filter result', ft_filtered);\n\t\t\tsetQueryResult(ft_filtered);\n\t\t};\n\n\t\tif (searchNow) {\n\t\t\tfilterQuery();\n\t\t\tsetSearchNow(false);\n\t\t}\n\t}, [fulltime, jobdesc, location, props.jobList, searchNow, setSearchNow]);\n\n\tconst iterateJobs = useCallback(() => {\n\t\t// console.log(queryResult);\n\t\tif (!queryResult) return;\n\t\tconst jobElements: JSX.Element[] = [];\n\t\tqueryResult.forEach((job) => {\n\t\t\tjobElements.push(\n\t\t\t\t<Link key={job.id} to={`/job-desc/${job.id}`}>\n\t\t\t\t\t<List.Item className=\"job-entry\">\n\t\t\t\t\t\t<Columns className=\"job-upper-row\">\n\t\t\t\t\t\t\t<Columns.Column className=\"job-column-left\">\n\t\t\t\t\t\t\t\t<p className=\"job-title job-entry-left\">{job.title}</p>\n\t\t\t\t\t\t\t</Columns.Column>\n\t\t\t\t\t\t\t<Columns.Column className=\"job-column-right\">\n\t\t\t\t\t\t\t\t<p className=\"job-location job-entry-right\">{job.location}</p>\n\t\t\t\t\t\t\t</Columns.Column>\n\t\t\t\t\t\t</Columns>\n\t\t\t\t\t\t<Columns className=\"job-lower-row\">\n\t\t\t\t\t\t\t<Columns.Column className=\"job-column-left\">\n\t\t\t\t\t\t\t\t<p className=\"job-subtitle job-entry-left\">\n\t\t\t\t\t\t\t\t\t{job.company} - <b>{job.type}</b>\n\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t</Columns.Column>\n\t\t\t\t\t\t\t<Columns.Column className=\"job-column-right\">\n\t\t\t\t\t\t\t\t<p className=\" job-subtitle job-entry-right\">\n\t\t\t\t\t\t\t\t\t{DateUtil.getDatesDiffInDays(new Date(), new Date(job.created_at))} days ago\n\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t</Columns.Column>\n\t\t\t\t\t\t</Columns>\n\t\t\t\t\t</List.Item>\n\t\t\t\t</Link>\n\t\t\t);\n\t\t});\n\n\t\treturn jobElements;\n\t}, [queryResult]);\n\n\treturn (\n\t\t<Box>\n\t\t\t<h1 className=\"job-list-title\">Job List</h1>\n\t\t\t<List hoverable>{iterateJobs()}</List>\n\t\t</Box>\n\t);\n};\n\nexport default JobListComponent;\n","import { useContext } from 'react';\nimport Columns from 'react-bulma-components/lib/components/columns';\nimport { Label } from 'react-bulma-components/lib/components/form';\nimport './JobSearch.scss';\nimport { useState } from 'react';\nimport { JobSearchContext } from 'contexts/JobSearch';\n\nconst JobSearch = (props: any) => {\n\tconst [searchFilter, setSearchFilter] = useState<any>({\n\t\tjobdesc: '',\n\t\tlocation: '',\n\t\tfulltime: false\n\t});\n\tconst { setJobdesc, setLocation, setFulltime, setSearchNow } = useContext(JobSearchContext);\n\n\tconst SearchBar = () => {\n\t\treturn (\n\t\t\t<Columns className=\"is-vcentered\">\n\t\t\t\t<Columns.Column size={4}>\n\t\t\t\t\t<div className=\"control searchbar-text\">\n\t\t\t\t\t\t<Label className=\"searchbar-text\">Job Description</Label>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\tclassName=\"input searchbar-text is-primary\"\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tplaceholder=\"Filter by title, benefits, companies, expertise\"\n\t\t\t\t\t\t\tvalue={searchFilter.jobdesc}\n\t\t\t\t\t\t\tonInput={(e) => {\n\t\t\t\t\t\t\t\tlet event = e.target as HTMLInputElement;\n\t\t\t\t\t\t\t\tsetSearchFilter({ ...searchFilter, jobdesc: event.value });\n\t\t\t\t\t\t\t\t// setJobdesc(event.value);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t</Columns.Column>\n\t\t\t\t<Columns.Column size={4}>\n\t\t\t\t\t<div className=\"control\">\n\t\t\t\t\t\t<Label className=\"searchbar-text\">Location</Label>\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\tclassName=\"input searchbar-text is-primary\"\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tvalue={searchFilter.location}\n\t\t\t\t\t\t\tplaceholder=\"Filter by location\"\n\t\t\t\t\t\t\tonInput={(e) => {\n\t\t\t\t\t\t\t\tlet event = e.target as HTMLInputElement;\n\t\t\t\t\t\t\t\tsetSearchFilter({ ...searchFilter, location: event.value });\n\t\t\t\t\t\t\t\t// setJobdesc(event.value);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t</Columns.Column>\n\t\t\t\t<Columns.Column size={2}>\n\t\t\t\t\t<label className=\"checkbox\">\n\t\t\t\t\t\t<input\n\t\t\t\t\t\t\tclassName=\"searchbar-text\"\n\t\t\t\t\t\t\ttype=\"checkbox\"\n\t\t\t\t\t\t\tvalue={searchFilter.fulltime}\n\t\t\t\t\t\t\tonChange={() => {\n\t\t\t\t\t\t\t\tsetSearchFilter({ ...searchFilter, fulltime: !searchFilter.fulltime });\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<span className=\"searchbar-text\">&nbsp;Full-time only</span>\n\t\t\t\t\t</label>\n\t\t\t\t</Columns.Column>\n\t\t\t\t<Columns.Column size={2}>\n\t\t\t\t\t<div className=\"control\">\n\t\t\t\t\t\t<div\n\t\t\t\t\t\t\tclassName=\"searchbar-text search-button button is-info\"\n\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\tsetJobdesc(searchFilter.jobdesc.toLocaleLowerCase());\n\t\t\t\t\t\t\t\tsetLocation(searchFilter.location.toLocaleLowerCase());\n\t\t\t\t\t\t\t\tsetFulltime(searchFilter.fulltime);\n\t\t\t\t\t\t\t\tsetSearchNow(true);\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\tSearch\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</Columns.Column>\n\t\t\t</Columns>\n\t\t);\n\t};\n\treturn <>{SearchBar()}</>;\n};\n\nexport default JobSearch;\n","import { fetchJobList } from 'api/jobs';\nimport JobListComponent from 'components/JobListComponent';\nimport JobSearch from 'components/JobSearch';\nimport { JobSearchContext } from 'contexts/JobSearch';\nimport React, { useEffect, useState } from 'react';\n\nimport './JobList.scss';\n\nconst JobList = () => {\n\tconst [jobList, setJobList] = useState<any[]>([]);\n\tconst [jobdesc, setJobdesc] = useState<string>('');\n\tconst [location, setLocation] = useState<string>('');\n\tconst [fulltime, setFulltime] = useState<boolean>(false);\n\tconst [searchNow, setSearchNow] = useState<boolean>(false);\n\n\tuseEffect(() => {\n\t\tconst { cancel, request } = fetchJobList();\n\t\trequest\n\t\t\t.then((data) => {\n\t\t\t\tsetJobList(data);\n\t\t\t})\n\t\t\t.catch((err) => {\n\t\t\t\tconsole.log(err);\n\t\t\t});\n\n\t\treturn () => {\n\t\t\tcancel();\n\t\t};\n\t}, []);\n\n\treturn (\n\t\t<JobSearchContext.Provider\n\t\t\tvalue={{ jobdesc, setJobdesc, location, searchNow, setLocation, fulltime, setFulltime, setSearchNow }}\n\t\t>\n\t\t\t<div className=\"joblist-container\">\n\t\t\t\t<JobSearch jobList={jobList}></JobSearch>\n\t\t\t\t<JobListComponent jobList={jobList} />\n\t\t\t</div>\n\t\t</JobSearchContext.Provider>\n\t);\n};\n\nexport default JobList;\n","import { fetchJobDesc } from 'api/jobs';\nimport { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport Columns from 'react-bulma-components/lib/components/columns';\nimport Image from 'react-bulma-components/lib/components/image';\nimport DOMPurify from 'dompurify';\nimport Box from 'react-bulma-components/lib/components/box';\n\nimport './JobDescription.scss';\n\nconst JobDescription = (props: any) => {\n\t// retrieve params into a variable\n\tconst params = useParams();\n\n\tconst [jobDesc, setJobDesc] = useState<any>();\n\n\tuseEffect(() => {\n\t\tconst { cancel, request } = fetchJobDesc(params.id);\n\t\trequest\n\t\t\t.then((data) => {\n\t\t\t\tsetJobDesc(data);\n\t\t\t})\n\t\t\t.catch((err) => {\n\t\t\t\tconsole.log(err);\n\t\t\t});\n\n\t\treturn () => {\n\t\t\tcancel();\n\t\t};\n\t}, [params.id]);\n\n\tconst JobHeader = () => {\n\t\tif (!jobDesc) return;\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<h3 className=\"jobdesc-subtitle\">\n\t\t\t\t\t{jobDesc.type} / {jobDesc.location}\n\t\t\t\t</h3>\n\t\t\t\t<h1 className=\"jobdesc-title\">{jobDesc.title}</h1>\n\t\t\t\t<hr></hr>\n\t\t\t</div>\n\t\t);\n\t};\n\n\tconst JobContent = () => {\n\t\tif (!jobDesc) return;\n\t\treturn (\n\t\t\t<Columns className=\"jobdesc-content\">\n\t\t\t\t<Columns.Column size={8}>\n\t\t\t\t\t<div\n\t\t\t\t\t\tclassName=\"job-desc-content\"\n\t\t\t\t\t\t// eslint-disable-next-line react/no-danger\n\t\t\t\t\t\tdangerouslySetInnerHTML={{\n\t\t\t\t\t\t\t__html: DOMPurify.sanitize(jobDesc.description, {})\n\t\t\t\t\t\t}}\n\t\t\t\t\t/>\n\t\t\t\t</Columns.Column>\n\t\t\t\t<Columns.Column size={4}>\n\t\t\t\t\t<Columns className=\"jobdesc-right-boxes\">\n\t\t\t\t\t\t<Box className=\"jobdesc-logobox\">\n\t\t\t\t\t\t\t<div className=\"jobdesc-company-name\">{jobDesc.company}</div>\n\t\t\t\t\t\t\t<Box className=\"jobdesc-company-logo-container\">\n\t\t\t\t\t\t\t\t<Image className=\"jobdesc-company-logo\" src={jobDesc.company_logo}></Image>\n\t\t\t\t\t\t\t</Box>\n\t\t\t\t\t\t\t<div className=\"jobdesc-company-url\">{jobDesc.company_url}</div>\n\t\t\t\t\t\t</Box>\n\t\t\t\t\t</Columns>\n\t\t\t\t\t<Columns className=\"jobdesc-right-boxes\">\n\t\t\t\t\t\t<Box className=\"jobdesc-logobox jobdesc-yellow-boxes\">\n\t\t\t\t\t\t\t<div className=\"jobdesc-company-name\">How to apply</div>\n\t\t\t\t\t\t\t<div\n\t\t\t\t\t\t\t\tclassName=\"job-desc-content\"\n\t\t\t\t\t\t\t\t// eslint-disable-next-line react/no-danger\n\t\t\t\t\t\t\t\tdangerouslySetInnerHTML={{\n\t\t\t\t\t\t\t\t\t__html: DOMPurify.sanitize(jobDesc.how_to_apply, {})\n\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t</Box>\n\t\t\t\t\t</Columns>\n\t\t\t\t</Columns.Column>\n\t\t\t</Columns>\n\t\t);\n\t};\n\n\treturn (\n\t\t<div>\n\t\t\t<Box>\n\t\t\t\t{JobHeader()}\n\t\t\t\t{JobContent()}\n\t\t\t</Box>\n\t\t</div>\n\t);\n};\n\nexport default JobDescription;\n","import React from 'react';\n\n// Context:\nexport const LoginContext = React.createContext({\n\tisLoggedIn: false,\n\tsetIsLoggedIn: (key: boolean) => {},\n\tusername: '',\n\tsetUsername: (key: string) => {},\n\timageUrl: '',\n\tsetImageUrl: (key: string) => {}\n});\n","import React from 'react';\n\n// Context:\nexport const AlertContext = React.createContext({\n\tloginFailAlert: false,\n\tsetLoginFailAlert: (key: boolean) => {}\n});\n","import React, { useContext } from 'react';\nimport './Login.scss';\nimport { useHistory } from 'react-router-dom';\nimport { useState } from 'react';\nimport Button from 'react-bulma-components/lib/components/button';\nimport { LoginContext } from 'contexts/Login';\nimport { AlertContext } from 'contexts/Alert';\nimport Cookies from 'universal-cookie';\n\nconst Login = () => {\n\tconst history = useHistory();\n\tconst { setUsername, setIsLoggedIn } = useContext(LoginContext);\n\tconst { setLoginFailAlert } = useContext(AlertContext);\n\tconst [rememberMe, setRememberMe] = useState(false);\n\n\t// hardcode user credentials:\n\tconst user_cred = {\n\t\tusername: 'abcdef@gmail.com',\n\t\tpassword: '123456'\n\t};\n\n\tconst [filledCreds, setFilledCreds] = useState<any>({\n\t\tusername: '',\n\t\tpassword: ''\n\t});\n\n\tconst checkCreds = () => {\n\t\tconsole.log(filledCreds.username, filledCreds.password, user_cred.username, user_cred.password);\n\t\tif (filledCreds.username === user_cred.username && filledCreds.password === user_cred.password) {\n\t\t\tconsole.log('redirecting...');\n\t\t\tsetIsLoggedIn(true);\n\t\t\tsetUsername(filledCreds.username);\n\t\t\t// handle remember me:\n\t\t\tif (rememberMe) {\n\t\t\t\tconsole.log('REMEMBERING THE USER');\n\t\t\t\tconst cookies = new Cookies();\n\t\t\t\tcookies.set('loggedInUser', filledCreds.username, { path: '/' });\n\t\t\t}\n\t\t\thistory.replace('/job-list');\n\t\t} else {\n\t\t\tsetLoginFailAlert(true);\n\t\t}\n\t};\n\n\treturn (\n\t\t<section className=\"login-form hero is-primary is-fullheight\">\n\t\t\t<div className=\"hero-body\">\n\t\t\t\t<div className=\"container\">\n\t\t\t\t\t<div className=\"columns is-centered\">\n\t\t\t\t\t\t<div className=\"column is-5-tablet is-4-desktop is-3-widescreen\">\n\t\t\t\t\t\t\t<form action=\"\" className=\"box\">\n\t\t\t\t\t\t\t\t<div className=\"field\">\n\t\t\t\t\t\t\t\t\t<label className=\"label\">Email</label>\n\t\t\t\t\t\t\t\t\t<div className=\"control has-icons-left\">\n\t\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\t\ttype=\"email\"\n\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"e.g. bobsmith@gmail.com\"\n\t\t\t\t\t\t\t\t\t\t\tclassName=\"input\"\n\t\t\t\t\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\t\t\t\t\tvalue={filledCreds.jobdesc}\n\t\t\t\t\t\t\t\t\t\t\tonInput={(e) => {\n\t\t\t\t\t\t\t\t\t\t\t\tlet event = e.target as HTMLInputElement;\n\t\t\t\t\t\t\t\t\t\t\t\tsetFilledCreds({ ...filledCreds, username: event.value });\n\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t<span className=\"icon is-small is-left\">\n\t\t\t\t\t\t\t\t\t\t\t<i className=\"fa fa-envelope\"></i>\n\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div className=\"field\">\n\t\t\t\t\t\t\t\t\t<label className=\"label\">Password</label>\n\t\t\t\t\t\t\t\t\t<div className=\"control has-icons-left\">\n\t\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\t\ttype=\"password\"\n\t\t\t\t\t\t\t\t\t\t\tplaceholder=\"*******\"\n\t\t\t\t\t\t\t\t\t\t\tclassName=\"input\"\n\t\t\t\t\t\t\t\t\t\t\tvalue={filledCreds.password}\n\t\t\t\t\t\t\t\t\t\t\tonInput={(e) => {\n\t\t\t\t\t\t\t\t\t\t\t\tlet event = e.target as HTMLInputElement;\n\t\t\t\t\t\t\t\t\t\t\t\tsetFilledCreds({ ...filledCreds, password: event.value });\n\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t\trequired\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t<span className=\"icon is-small is-left\">\n\t\t\t\t\t\t\t\t\t\t\t<i className=\"fa fa-lock\"></i>\n\t\t\t\t\t\t\t\t\t\t</span>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div className=\"field\">\n\t\t\t\t\t\t\t\t\t<label className=\"checkbox\">\n\t\t\t\t\t\t\t\t\t\t<input\n\t\t\t\t\t\t\t\t\t\t\ttype=\"checkbox\"\n\t\t\t\t\t\t\t\t\t\t\tonChange={() => {\n\t\t\t\t\t\t\t\t\t\t\t\tsetRememberMe(!rememberMe);\n\t\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t\t/>\n\t\t\t\t\t\t\t\t\t\t<p className=\"login-text\">&nbsp; Remember me</p>\n\t\t\t\t\t\t\t\t\t</label>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t<div className=\"field\">\n\t\t\t\t\t\t\t\t\t<Button\n\t\t\t\t\t\t\t\t\t\tclassName=\"is-success\"\n\t\t\t\t\t\t\t\t\t\ttype=\"button\"\n\t\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\t\tcheckCreds();\n\t\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\t\tLogin\n\t\t\t\t\t\t\t\t\t</Button>\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t</form>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t</section>\n\t);\n};\n\nexport default Login;\n","import { LoginContext } from 'contexts/Login';\nimport { useContext } from 'react';\nimport Cookies from 'universal-cookie';\n\nconst CheckIfLoggedIn = (): boolean => {\n\tconst { isLoggedIn } = useContext(LoginContext);\n\tconst cookies = new Cookies();\n\tconst username = cookies.get('loggedInUser');\n\tif (username && username !== '') {\n\t\tconsole.log('cookies exist!');\n\t\treturn true;\n\t}\n\n\tconsole.log('Logged in?', isLoggedIn);\n\treturn isLoggedIn;\n};\n\nexport default CheckIfLoggedIn;\n","import React from 'react';\nimport { Redirect, Route } from 'react-router-dom';\nimport CheckIfLoggedIn from 'utils/CheckIfLoggedIn';\n\nconst AuthenticatedRoute = ({ component: Component, ...rest }) => {\n\t// Add your own authentication on the below line.\n\tconst isLoggedIn: boolean = CheckIfLoggedIn();\n\n\treturn (\n\t\t<Route\n\t\t\t{...rest}\n\t\t\trender={(props) =>\n\t\t\t\tisLoggedIn ? (\n\t\t\t\t\t<Component {...props} />\n\t\t\t\t) : (\n\t\t\t\t\t<Redirect to={{ pathname: '/login', state: { from: props.location } }} />\n\t\t\t\t)\n\t\t\t}\n\t\t/>\n\t);\n};\n\nexport default AuthenticatedRoute;\n","export default class Algorithm {\n\tstatic randomIntFromInterval(min: number, max: number) {\n\t\t// min and max included\n\t\treturn Math.floor(Math.random() * (max - min + 1) + min);\n\t}\n\n\tstatic randomFloatFromInterval(min: number, max: number) {\n\t\t// inclusive min and exclusive max\n\t\treturn Math.random() * (max - min) + min;\n\t}\n\n\tstatic roundToNDecimal(value: number, n: number) {\n\t\t// n is number of decimal\n\t\treturn Math.round((value + Number.EPSILON) * Math.pow(10, n)) / Math.pow(10, n);\n\t}\n\n\tstatic delay(ms: number) {\n\t\treturn new Promise((resolve) => setTimeout(resolve, ms));\n\t}\n}\n","import React, { useContext } from 'react';\nimport Notification from 'react-bulma-components/lib/components/notification';\nimport Button from 'react-bulma-components/lib/components/button';\nimport { AlertContext } from 'contexts/Alert';\nimport { CSSTransition } from 'react-transition-group';\nimport Algorithm from 'utils/Algorithm';\n\nconst FailedLogin = () => {\n\tconst { loginFailAlert, setLoginFailAlert } = useContext(AlertContext);\n\n\treturn (\n\t\t<CSSTransition\n\t\t\tin={loginFailAlert}\n\t\t\ttimeout={{ enter: 300, exit: 400 }}\n\t\t\tclassNames=\"alert\"\n\t\t\tunmountOnExit\n\t\t\tonEnter={async () => {\n\t\t\t\tawait Algorithm.delay(2000);\n\t\t\t\tsetLoginFailAlert(false);\n\t\t\t}}\n\t\t>\n\t\t\t<Notification color=\"danger\">\n\t\t\t\tWrong credentials! Please try again.\n\t\t\t\t<Button\n\t\t\t\t\tremove\n\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\tsetLoginFailAlert(false);\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t</Notification>\n\t\t</CSSTransition>\n\t);\n};\n\nexport default FailedLogin;\n","import React from 'react';\nimport FailedLogin from './FailedLogin';\n\nimport './index.scss';\n\nconst Alerts = () => {\n\treturn (\n\t\t<div className=\"alerts-parent\">\n\t\t\t<FailedLogin />\n\t\t</div>\n\t);\n};\n\nexport default Alerts;\n","import { LoginContext } from 'contexts/Login';\nimport { useContext, useState } from 'react';\n// import Navbar from 'react-bulma-components/lib/components/navbar';\nimport Navbar from 'react-bulma-components/lib/components/navbar';\nimport { Link } from 'react-router-dom';\nimport './NavbarComponent.scss';\nimport { useHistory } from 'react-router-dom';\nimport Cookies from 'universal-cookie';\n\nconst NavbarComponent = () => {\n\tconst { username, setIsLoggedIn } = useContext(LoginContext);\n\tconst [navbarActive, setNavbarActive] = useState(false);\n\tconst history = useHistory();\n\n\tconst Logout = () => {\n\t\tconst cookies = new Cookies();\n\t\tcookies.remove('loggedInUser');\n\t\tsetIsLoggedIn(false);\n\t\thistory.replace('/login');\n\t};\n\n\t// setting brand to active=false somehow fixes title position when in mobile view lol\n\treturn (\n\t\t<Navbar color=\"black\" fixed=\"top\" active={navbarActive} transparent={false}>\n\t\t\t<Navbar.Brand className=\"brand\" active={false.toString()}>\n\t\t\t\t<h1 className=\"title\">\n\t\t\t\t\t<b>GITHUB</b> JOBS\n\t\t\t\t</h1>\n\t\t\t\t<Navbar.Burger onClick={() => setNavbarActive(!navbarActive)} />\n\t\t\t</Navbar.Brand>\n\t\t\t<Navbar.Menu className=\"navbar-menu\">\n\t\t\t\t<Navbar.Container position=\"end\">\n\t\t\t\t\t<div className=\"navbar-item\">\n\t\t\t\t\t\t<Link to=\"/job-list\">All jobs</Link>\n\t\t\t\t\t</div>\n\t\t\t\t\t{username !== '' ? (\n\t\t\t\t\t\t<Navbar.Item dropdown hoverable>\n\t\t\t\t\t\t\t<Navbar.Item arrowless={false} className=\"navbar-username\">\n\t\t\t\t\t\t\t\tHello there, &nbsp;<b>{username}</b>\n\t\t\t\t\t\t\t</Navbar.Item>\n\t\t\t\t\t\t\t<Navbar.Dropdown className=\"is-right\">\n\t\t\t\t\t\t\t\t<Navbar.Item\n\t\t\t\t\t\t\t\t\tclassName=\"navbar-item-drop\"\n\t\t\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\t\t\tLogout();\n\t\t\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\t\t>\n\t\t\t\t\t\t\t\t\tLogout\n\t\t\t\t\t\t\t\t</Navbar.Item>\n\t\t\t\t\t\t\t</Navbar.Dropdown>\n\t\t\t\t\t\t</Navbar.Item>\n\t\t\t\t\t) : (\n\t\t\t\t\t\t<div className=\"navbar-item\">\n\t\t\t\t\t\t\t<Link to=\"/login\">Login</Link>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t)}\n\t\t\t\t</Navbar.Container>\n\t\t\t</Navbar.Menu>\n\t\t</Navbar>\n\t);\n};\n\nexport default NavbarComponent;\n\n// import React from 'react';\n// import Button from 'react-bulma-components/lib/components/button';\n\n// export default () => <Button color=\"primary\">My Bulma button</Button>;\n","import React, { useState } from 'react';\nimport './App.scss';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport JobList from 'pages/JobList';\nimport JobDescription from 'pages/JobDescription';\nimport Login from 'pages/Login';\nimport { LoginContext } from 'contexts/Login';\nimport AuthenticatedRoute from 'route/AuthenticatedRoute';\nimport { AlertContext } from 'contexts/Alert';\nimport Alerts from 'components/alert';\nimport NavbarComponent from 'components/navbar/NavbarComponent';\nimport Cookies from 'universal-cookie';\nimport { useEffect } from 'react';\n\nfunction App() {\n\tconst [username, setUsername] = useState('');\n\tconst [imageUrl, setImageUrl] = useState('');\n\tconst [isLoggedIn, setIsLoggedIn] = useState(false);\n\tconst [loginFailAlert, setLoginFailAlert] = useState(false);\n\n\tuseEffect(() => {\n\t\tconst cookies = new Cookies();\n\t\tconst username = cookies.get('loggedInUser');\n\t\tif (username && username !== '') {\n\t\t\tconsole.log('cookies exist setting credentials!');\n\t\t\tsetUsername(username);\n\t\t\tsetIsLoggedIn(true);\n\t\t}\n\t}, []);\n\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t<header className=\"App-header\">\n\t\t\t\t<AlertContext.Provider value={{ loginFailAlert, setLoginFailAlert }}>\n\t\t\t\t\t<LoginContext.Provider\n\t\t\t\t\t\tvalue={{ username, setUsername, imageUrl, setImageUrl, isLoggedIn, setIsLoggedIn }}\n\t\t\t\t\t>\n\t\t\t\t\t\t<Alerts></Alerts>\n\t\t\t\t\t\t<BrowserRouter>\n\t\t\t\t\t\t\t<NavbarComponent></NavbarComponent>\n\t\t\t\t\t\t\t<Switch>\n\t\t\t\t\t\t\t\t<AuthenticatedRoute path=\"/\" component={JobList} exact></AuthenticatedRoute>\n\t\t\t\t\t\t\t\t<Route path=\"/login\">\n\t\t\t\t\t\t\t\t\t<Login />\n\t\t\t\t\t\t\t\t</Route>\n\t\t\t\t\t\t\t\t<AuthenticatedRoute path=\"/job-list\" component={JobList} exact></AuthenticatedRoute>\n\t\t\t\t\t\t\t\t<AuthenticatedRoute\n\t\t\t\t\t\t\t\t\tpath=\"/job-desc/:id\"\n\t\t\t\t\t\t\t\t\tcomponent={JobDescription}\n\t\t\t\t\t\t\t\t\texact\n\t\t\t\t\t\t\t\t></AuthenticatedRoute>\n\t\t\t\t\t\t\t\t{/* <Route path=\"/job-list\">\n\t\t\t\t\t\t\t\t<JobList></JobList>\n\t\t\t\t\t\t\t</Route> */}\n\t\t\t\t\t\t\t\t{/* <Route path=\"/job-desc/:id\">\n\t\t\t\t\t\t\t\t<JobDescription />\n\t\t\t\t\t\t\t</Route> */}\n\t\t\t\t\t\t\t</Switch>\n\t\t\t\t\t\t</BrowserRouter>\n\t\t\t\t\t</LoginContext.Provider>\n\t\t\t\t</AlertContext.Provider>\n\t\t\t\t{/* <img src={logo} className=\"App-logo\" alt=\"logo\" />\n\t\t\t\t<p>\n\t\t\t\t\tEdit <code>src/App.tsx</code> and save to reload.\n\t\t\t\t</p>\n\t\t\t\t<a className=\"App-link\" href=\"https://reactjs.org\" target=\"_blank\" rel=\"noopener noreferrer\">\n\t\t\t\t\tLearn React\n\t\t\t\t</a> */}\n\t\t\t</header>\n\t\t</div>\n\t);\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}